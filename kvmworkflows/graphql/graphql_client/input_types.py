# Generated by ariadne-codegen
# Source: http://95.217.222.28:8787/v1/graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    cursor_ordering,
    entries_constraint,
    entries_update_column,
    entry_categories_constraint,
    entry_categories_select_column,
    entry_categories_update_column,
    entry_links_constraint,
    entry_links_select_column,
    entry_links_update_column,
    entry_tags_constraint,
    entry_tags_select_column,
    entry_tags_update_column,
    link_constraint,
    link_update_column,
    order_by,
    subscriptions_constraint,
    subscriptions_update_column,
    tags_constraint,
    tags_update_column,
)


class Int_comparison_exp(BaseModel):
    eq: Optional[int] = Field(alias="_eq", default=None)
    gt: Optional[int] = Field(alias="_gt", default=None)
    gte: Optional[int] = Field(alias="_gte", default=None)
    in_: Optional[List[int]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[int] = Field(alias="_lt", default=None)
    lte: Optional[int] = Field(alias="_lte", default=None)
    neq: Optional[int] = Field(alias="_neq", default=None)
    nin: Optional[List[int]] = Field(alias="_nin", default=None)


class String_comparison_exp(BaseModel):
    eq: Optional[str] = Field(alias="_eq", default=None)
    gt: Optional[str] = Field(alias="_gt", default=None)
    gte: Optional[str] = Field(alias="_gte", default=None)
    ilike: Optional[str] = Field(alias="_ilike", default=None)
    in_: Optional[List[str]] = Field(alias="_in", default=None)
    iregex: Optional[str] = Field(alias="_iregex", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    like: Optional[str] = Field(alias="_like", default=None)
    lt: Optional[str] = Field(alias="_lt", default=None)
    lte: Optional[str] = Field(alias="_lte", default=None)
    neq: Optional[str] = Field(alias="_neq", default=None)
    nilike: Optional[str] = Field(alias="_nilike", default=None)
    nin: Optional[List[str]] = Field(alias="_nin", default=None)
    niregex: Optional[str] = Field(alias="_niregex", default=None)
    nlike: Optional[str] = Field(alias="_nlike", default=None)
    nregex: Optional[str] = Field(alias="_nregex", default=None)
    nsimilar: Optional[str] = Field(alias="_nsimilar", default=None)
    regex: Optional[str] = Field(alias="_regex", default=None)
    similar: Optional[str] = Field(alias="_similar", default=None)


class entries_bool_exp(BaseModel):
    and_: Optional[List["entries_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["entries_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["entries_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    description: Optional["String_comparison_exp"] = None
    entry_categories: Optional["entry_categories_bool_exp"] = None
    entry_categories_aggregate: Optional["entry_categories_aggregate_bool_exp"] = None
    id: Optional["String_comparison_exp"] = None
    lat: Optional["numeric_comparison_exp"] = None
    links: Optional["entry_links_bool_exp"] = None
    links_aggregate: Optional["entry_links_aggregate_bool_exp"] = None
    lng: Optional["numeric_comparison_exp"] = None
    status: Optional["String_comparison_exp"] = None
    tags: Optional["entry_tags_bool_exp"] = None
    tags_aggregate: Optional["entry_tags_aggregate_bool_exp"] = None
    title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class entries_inc_input(BaseModel):
    lat: Optional[Any] = None
    lng: Optional[Any] = None


class entries_insert_input(BaseModel):
    created_at: Optional[Any] = None
    description: Optional[str] = None
    entry_categories: Optional["entry_categories_arr_rel_insert_input"] = None
    id: Optional[str] = None
    lat: Optional[Any] = None
    links: Optional["entry_links_arr_rel_insert_input"] = None
    lng: Optional[Any] = None
    status: Optional[str] = None
    tags: Optional["entry_tags_arr_rel_insert_input"] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class entries_obj_rel_insert_input(BaseModel):
    data: "entries_insert_input"
    on_conflict: Optional["entries_on_conflict"] = None


class entries_on_conflict(BaseModel):
    constraint: entries_constraint
    update_columns: List[entries_update_column]
    where: Optional["entries_bool_exp"] = None


class entries_order_by(BaseModel):
    created_at: Optional[order_by] = None
    description: Optional[order_by] = None
    entry_categories_aggregate: Optional["entry_categories_aggregate_order_by"] = None
    id: Optional[order_by] = None
    lat: Optional[order_by] = None
    links_aggregate: Optional["entry_links_aggregate_order_by"] = None
    lng: Optional[order_by] = None
    status: Optional[order_by] = None
    tags_aggregate: Optional["entry_tags_aggregate_order_by"] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class entries_pk_columns_input(BaseModel):
    id: str


class entries_set_input(BaseModel):
    created_at: Optional[Any] = None
    description: Optional[str] = None
    id: Optional[str] = None
    lat: Optional[Any] = None
    lng: Optional[Any] = None
    status: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class entries_stream_cursor_input(BaseModel):
    initial_value: "entries_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class entries_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    description: Optional[str] = None
    id: Optional[str] = None
    lat: Optional[Any] = None
    lng: Optional[Any] = None
    status: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class entries_updates(BaseModel):
    inc: Optional["entries_inc_input"] = Field(alias="_inc", default=None)
    set: Optional["entries_set_input"] = Field(alias="_set", default=None)
    where: "entries_bool_exp"


class entry_categories_aggregate_bool_exp(BaseModel):
    count: Optional["entry_categories_aggregate_bool_exp_count"] = None


class entry_categories_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[entry_categories_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["entry_categories_bool_exp"] = None
    predicate: "Int_comparison_exp"


class entry_categories_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["entry_categories_max_order_by"] = None
    min: Optional["entry_categories_min_order_by"] = None


class entry_categories_arr_rel_insert_input(BaseModel):
    data: List["entry_categories_insert_input"]
    on_conflict: Optional["entry_categories_on_conflict"] = None


class entry_categories_bool_exp(BaseModel):
    and_: Optional[List["entry_categories_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["entry_categories_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["entry_categories_bool_exp"]] = Field(alias="_or", default=None)
    category: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    entry: Optional["String_comparison_exp"] = None
    entry_by_entry: Optional["entries_bool_exp"] = Field(
        alias="entryByEntry", default=None
    )


class entry_categories_insert_input(BaseModel):
    category: Optional[str] = None
    created_at: Optional[Any] = None
    entry: Optional[str] = None
    entry_by_entry: Optional["entries_obj_rel_insert_input"] = Field(
        alias="entryByEntry", default=None
    )


class entry_categories_max_order_by(BaseModel):
    category: Optional[order_by] = None
    created_at: Optional[order_by] = None
    entry: Optional[order_by] = None


class entry_categories_min_order_by(BaseModel):
    category: Optional[order_by] = None
    created_at: Optional[order_by] = None
    entry: Optional[order_by] = None


class entry_categories_on_conflict(BaseModel):
    constraint: entry_categories_constraint
    update_columns: List[entry_categories_update_column]
    where: Optional["entry_categories_bool_exp"] = None


class entry_categories_order_by(BaseModel):
    category: Optional[order_by] = None
    created_at: Optional[order_by] = None
    entry: Optional[order_by] = None
    entry_by_entry: Optional["entries_order_by"] = Field(
        alias="entryByEntry", default=None
    )


class entry_categories_pk_columns_input(BaseModel):
    category: str
    entry: str


class entry_categories_set_input(BaseModel):
    category: Optional[str] = None
    created_at: Optional[Any] = None
    entry: Optional[str] = None


class entry_categories_stream_cursor_input(BaseModel):
    initial_value: "entry_categories_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class entry_categories_stream_cursor_value_input(BaseModel):
    category: Optional[str] = None
    created_at: Optional[Any] = None
    entry: Optional[str] = None


class entry_categories_updates(BaseModel):
    set: Optional["entry_categories_set_input"] = Field(alias="_set", default=None)
    where: "entry_categories_bool_exp"


class entry_links_aggregate_bool_exp(BaseModel):
    count: Optional["entry_links_aggregate_bool_exp_count"] = None


class entry_links_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[entry_links_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["entry_links_bool_exp"] = None
    predicate: "Int_comparison_exp"


class entry_links_aggregate_order_by(BaseModel):
    avg: Optional["entry_links_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["entry_links_max_order_by"] = None
    min: Optional["entry_links_min_order_by"] = None
    stddev: Optional["entry_links_stddev_order_by"] = None
    stddev_pop: Optional["entry_links_stddev_pop_order_by"] = None
    stddev_samp: Optional["entry_links_stddev_samp_order_by"] = None
    sum: Optional["entry_links_sum_order_by"] = None
    var_pop: Optional["entry_links_var_pop_order_by"] = None
    var_samp: Optional["entry_links_var_samp_order_by"] = None
    variance: Optional["entry_links_variance_order_by"] = None


class entry_links_arr_rel_insert_input(BaseModel):
    data: List["entry_links_insert_input"]
    on_conflict: Optional["entry_links_on_conflict"] = None


class entry_links_avg_order_by(BaseModel):
    link: Optional[order_by] = None


class entry_links_bool_exp(BaseModel):
    and_: Optional[List["entry_links_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["entry_links_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["entry_links_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    entry: Optional["String_comparison_exp"] = None
    entry_by_entry: Optional["entries_bool_exp"] = Field(
        alias="entryByEntry", default=None
    )
    link: Optional["Int_comparison_exp"] = None
    link_by_link: Optional["link_bool_exp"] = Field(alias="linkByLink", default=None)


class entry_links_inc_input(BaseModel):
    link: Optional[int] = None


class entry_links_insert_input(BaseModel):
    created_at: Optional[Any] = None
    entry: Optional[str] = None
    entry_by_entry: Optional["entries_obj_rel_insert_input"] = Field(
        alias="entryByEntry", default=None
    )
    link: Optional[int] = None
    link_by_link: Optional["link_obj_rel_insert_input"] = Field(
        alias="linkByLink", default=None
    )


class entry_links_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    entry: Optional[order_by] = None
    link: Optional[order_by] = None


class entry_links_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    entry: Optional[order_by] = None
    link: Optional[order_by] = None


class entry_links_on_conflict(BaseModel):
    constraint: entry_links_constraint
    update_columns: List[entry_links_update_column]
    where: Optional["entry_links_bool_exp"] = None


class entry_links_order_by(BaseModel):
    created_at: Optional[order_by] = None
    entry: Optional[order_by] = None
    entry_by_entry: Optional["entries_order_by"] = Field(
        alias="entryByEntry", default=None
    )
    link: Optional[order_by] = None
    link_by_link: Optional["link_order_by"] = Field(alias="linkByLink", default=None)


class entry_links_pk_columns_input(BaseModel):
    entry: str
    link: int


class entry_links_set_input(BaseModel):
    created_at: Optional[Any] = None
    entry: Optional[str] = None
    link: Optional[int] = None


class entry_links_stddev_order_by(BaseModel):
    link: Optional[order_by] = None


class entry_links_stddev_pop_order_by(BaseModel):
    link: Optional[order_by] = None


class entry_links_stddev_samp_order_by(BaseModel):
    link: Optional[order_by] = None


class entry_links_stream_cursor_input(BaseModel):
    initial_value: "entry_links_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class entry_links_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    entry: Optional[str] = None
    link: Optional[int] = None


class entry_links_sum_order_by(BaseModel):
    link: Optional[order_by] = None


class entry_links_updates(BaseModel):
    inc: Optional["entry_links_inc_input"] = Field(alias="_inc", default=None)
    set: Optional["entry_links_set_input"] = Field(alias="_set", default=None)
    where: "entry_links_bool_exp"


class entry_links_var_pop_order_by(BaseModel):
    link: Optional[order_by] = None


class entry_links_var_samp_order_by(BaseModel):
    link: Optional[order_by] = None


class entry_links_variance_order_by(BaseModel):
    link: Optional[order_by] = None


class entry_tags_aggregate_bool_exp(BaseModel):
    count: Optional["entry_tags_aggregate_bool_exp_count"] = None


class entry_tags_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[entry_tags_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["entry_tags_bool_exp"] = None
    predicate: "Int_comparison_exp"


class entry_tags_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["entry_tags_max_order_by"] = None
    min: Optional["entry_tags_min_order_by"] = None


class entry_tags_arr_rel_insert_input(BaseModel):
    data: List["entry_tags_insert_input"]
    on_conflict: Optional["entry_tags_on_conflict"] = None


class entry_tags_bool_exp(BaseModel):
    and_: Optional[List["entry_tags_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["entry_tags_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["entry_tags_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    entry: Optional["String_comparison_exp"] = None
    entry_by_entry: Optional["entries_bool_exp"] = Field(
        alias="entryByEntry", default=None
    )
    tag: Optional["String_comparison_exp"] = None
    tag_by_tag: Optional["tags_bool_exp"] = Field(alias="tagByTag", default=None)


class entry_tags_insert_input(BaseModel):
    created_at: Optional[Any] = None
    entry: Optional[str] = None
    entry_by_entry: Optional["entries_obj_rel_insert_input"] = Field(
        alias="entryByEntry", default=None
    )
    tag: Optional[str] = None
    tag_by_tag: Optional["tags_obj_rel_insert_input"] = Field(
        alias="tagByTag", default=None
    )


class entry_tags_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    entry: Optional[order_by] = None
    tag: Optional[order_by] = None


class entry_tags_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    entry: Optional[order_by] = None
    tag: Optional[order_by] = None


class entry_tags_on_conflict(BaseModel):
    constraint: entry_tags_constraint
    update_columns: List[entry_tags_update_column]
    where: Optional["entry_tags_bool_exp"] = None


class entry_tags_order_by(BaseModel):
    created_at: Optional[order_by] = None
    entry: Optional[order_by] = None
    entry_by_entry: Optional["entries_order_by"] = Field(
        alias="entryByEntry", default=None
    )
    tag: Optional[order_by] = None
    tag_by_tag: Optional["tags_order_by"] = Field(alias="tagByTag", default=None)


class entry_tags_pk_columns_input(BaseModel):
    entry: str
    tag: str


class entry_tags_set_input(BaseModel):
    created_at: Optional[Any] = None
    entry: Optional[str] = None
    tag: Optional[str] = None


class entry_tags_stream_cursor_input(BaseModel):
    initial_value: "entry_tags_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class entry_tags_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    entry: Optional[str] = None
    tag: Optional[str] = None


class entry_tags_updates(BaseModel):
    set: Optional["entry_tags_set_input"] = Field(alias="_set", default=None)
    where: "entry_tags_bool_exp"


class link_bool_exp(BaseModel):
    and_: Optional[List["link_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["link_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["link_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    description: Optional["String_comparison_exp"] = None
    entry_links: Optional["entry_links_bool_exp"] = None
    entry_links_aggregate: Optional["entry_links_aggregate_bool_exp"] = None
    id: Optional["Int_comparison_exp"] = None
    title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    url: Optional["String_comparison_exp"] = None


class link_inc_input(BaseModel):
    id: Optional[int] = None


class link_insert_input(BaseModel):
    created_at: Optional[Any] = None
    description: Optional[str] = None
    entry_links: Optional["entry_links_arr_rel_insert_input"] = None
    id: Optional[int] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None
    url: Optional[str] = None


class link_obj_rel_insert_input(BaseModel):
    data: "link_insert_input"
    on_conflict: Optional["link_on_conflict"] = None


class link_on_conflict(BaseModel):
    constraint: link_constraint
    update_columns: List[link_update_column]
    where: Optional["link_bool_exp"] = None


class link_order_by(BaseModel):
    created_at: Optional[order_by] = None
    description: Optional[order_by] = None
    entry_links_aggregate: Optional["entry_links_aggregate_order_by"] = None
    id: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    url: Optional[order_by] = None


class link_pk_columns_input(BaseModel):
    id: int


class link_set_input(BaseModel):
    created_at: Optional[Any] = None
    description: Optional[str] = None
    id: Optional[int] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None
    url: Optional[str] = None


class link_stream_cursor_input(BaseModel):
    initial_value: "link_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class link_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    description: Optional[str] = None
    id: Optional[int] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None
    url: Optional[str] = None


class link_updates(BaseModel):
    inc: Optional["link_inc_input"] = Field(alias="_inc", default=None)
    set: Optional["link_set_input"] = Field(alias="_set", default=None)
    where: "link_bool_exp"


class numeric_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class subscriptions_bool_exp(BaseModel):
    and_: Optional[List["subscriptions_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["subscriptions_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["subscriptions_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    email: Optional["String_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    interval: Optional["String_comparison_exp"] = None
    lat_max: Optional["numeric_comparison_exp"] = None
    lat_min: Optional["numeric_comparison_exp"] = None
    lon_max: Optional["numeric_comparison_exp"] = None
    lon_min: Optional["numeric_comparison_exp"] = None
    n_emails_sent: Optional["Int_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class subscriptions_inc_input(BaseModel):
    lat_max: Optional[Any] = None
    lat_min: Optional[Any] = None
    lon_max: Optional[Any] = None
    lon_min: Optional[Any] = None
    n_emails_sent: Optional[int] = None


class subscriptions_insert_input(BaseModel):
    created_at: Optional[Any] = None
    email: Optional[str] = None
    id: Optional[Any] = None
    interval: Optional[str] = None
    lat_max: Optional[Any] = None
    lat_min: Optional[Any] = None
    lon_max: Optional[Any] = None
    lon_min: Optional[Any] = None
    n_emails_sent: Optional[int] = None
    updated_at: Optional[Any] = None


class subscriptions_on_conflict(BaseModel):
    constraint: subscriptions_constraint
    update_columns: List[subscriptions_update_column]
    where: Optional["subscriptions_bool_exp"] = None


class subscriptions_order_by(BaseModel):
    created_at: Optional[order_by] = None
    email: Optional[order_by] = None
    id: Optional[order_by] = None
    interval: Optional[order_by] = None
    lat_max: Optional[order_by] = None
    lat_min: Optional[order_by] = None
    lon_max: Optional[order_by] = None
    lon_min: Optional[order_by] = None
    n_emails_sent: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class subscriptions_pk_columns_input(BaseModel):
    id: Any


class subscriptions_set_input(BaseModel):
    created_at: Optional[Any] = None
    email: Optional[str] = None
    id: Optional[Any] = None
    interval: Optional[str] = None
    lat_max: Optional[Any] = None
    lat_min: Optional[Any] = None
    lon_max: Optional[Any] = None
    lon_min: Optional[Any] = None
    n_emails_sent: Optional[int] = None
    updated_at: Optional[Any] = None


class subscriptions_stream_cursor_input(BaseModel):
    initial_value: "subscriptions_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class subscriptions_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    email: Optional[str] = None
    id: Optional[Any] = None
    interval: Optional[str] = None
    lat_max: Optional[Any] = None
    lat_min: Optional[Any] = None
    lon_max: Optional[Any] = None
    lon_min: Optional[Any] = None
    n_emails_sent: Optional[int] = None
    updated_at: Optional[Any] = None


class subscriptions_updates(BaseModel):
    inc: Optional["subscriptions_inc_input"] = Field(alias="_inc", default=None)
    set: Optional["subscriptions_set_input"] = Field(alias="_set", default=None)
    where: "subscriptions_bool_exp"


class tags_bool_exp(BaseModel):
    and_: Optional[List["tags_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["tags_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["tags_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    entry_tags: Optional["entry_tags_bool_exp"] = None
    entry_tags_aggregate: Optional["entry_tags_aggregate_bool_exp"] = None
    id: Optional["String_comparison_exp"] = None


class tags_insert_input(BaseModel):
    created_at: Optional[Any] = None
    entry_tags: Optional["entry_tags_arr_rel_insert_input"] = None
    id: Optional[str] = None


class tags_obj_rel_insert_input(BaseModel):
    data: "tags_insert_input"
    on_conflict: Optional["tags_on_conflict"] = None


class tags_on_conflict(BaseModel):
    constraint: tags_constraint
    update_columns: List[tags_update_column]
    where: Optional["tags_bool_exp"] = None


class tags_order_by(BaseModel):
    created_at: Optional[order_by] = None
    entry_tags_aggregate: Optional["entry_tags_aggregate_order_by"] = None
    id: Optional[order_by] = None


class tags_pk_columns_input(BaseModel):
    id: str


class tags_set_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[str] = None


class tags_stream_cursor_input(BaseModel):
    initial_value: "tags_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class tags_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[str] = None


class tags_updates(BaseModel):
    set: Optional["tags_set_input"] = Field(alias="_set", default=None)
    where: "tags_bool_exp"


class timestamptz_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class uuid_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


entries_bool_exp.model_rebuild()
entries_insert_input.model_rebuild()
entries_obj_rel_insert_input.model_rebuild()
entries_on_conflict.model_rebuild()
entries_order_by.model_rebuild()
entries_stream_cursor_input.model_rebuild()
entries_updates.model_rebuild()
entry_categories_aggregate_bool_exp.model_rebuild()
entry_categories_aggregate_bool_exp_count.model_rebuild()
entry_categories_aggregate_order_by.model_rebuild()
entry_categories_arr_rel_insert_input.model_rebuild()
entry_categories_bool_exp.model_rebuild()
entry_categories_insert_input.model_rebuild()
entry_categories_on_conflict.model_rebuild()
entry_categories_order_by.model_rebuild()
entry_categories_stream_cursor_input.model_rebuild()
entry_categories_updates.model_rebuild()
entry_links_aggregate_bool_exp.model_rebuild()
entry_links_aggregate_bool_exp_count.model_rebuild()
entry_links_aggregate_order_by.model_rebuild()
entry_links_arr_rel_insert_input.model_rebuild()
entry_links_bool_exp.model_rebuild()
entry_links_insert_input.model_rebuild()
entry_links_on_conflict.model_rebuild()
entry_links_order_by.model_rebuild()
entry_links_stream_cursor_input.model_rebuild()
entry_links_updates.model_rebuild()
entry_tags_aggregate_bool_exp.model_rebuild()
entry_tags_aggregate_bool_exp_count.model_rebuild()
entry_tags_aggregate_order_by.model_rebuild()
entry_tags_arr_rel_insert_input.model_rebuild()
entry_tags_bool_exp.model_rebuild()
entry_tags_insert_input.model_rebuild()
entry_tags_on_conflict.model_rebuild()
entry_tags_order_by.model_rebuild()
entry_tags_stream_cursor_input.model_rebuild()
entry_tags_updates.model_rebuild()
link_bool_exp.model_rebuild()
link_insert_input.model_rebuild()
link_obj_rel_insert_input.model_rebuild()
link_on_conflict.model_rebuild()
link_order_by.model_rebuild()
link_stream_cursor_input.model_rebuild()
link_updates.model_rebuild()
subscriptions_bool_exp.model_rebuild()
subscriptions_on_conflict.model_rebuild()
subscriptions_stream_cursor_input.model_rebuild()
subscriptions_updates.model_rebuild()
tags_bool_exp.model_rebuild()
tags_insert_input.model_rebuild()
tags_obj_rel_insert_input.model_rebuild()
tags_on_conflict.model_rebuild()
tags_order_by.model_rebuild()
tags_stream_cursor_input.model_rebuild()
tags_updates.model_rebuild()
